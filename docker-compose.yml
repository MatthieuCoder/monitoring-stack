version: "3"
networks:
  loki:
services:
  fluentd:
    image: grafana/fluent-plugin-loki:main
    volumes:
      - ./fluentd/config.conf:/fluentd/etc/fluent.conf
    environment:
      - LOKI_URL=http://loki-gateway
      - TZ=Indian/Reunion
    networks:
      - loki
    depends_on:
      - loki-gateway
    ports:
      - 514:514/udp
      - 24224:24224
  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - TZ=Indian/Reunion
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki
    depends_on:
      - mimir-lb
      - loki-gateway
  minio_loki_createjob:
    image: minio/mc
    depends_on:
      - minio
    networks:
      - loki
    env_file:
      - .env
    volumes:
      - ./loki/policy.json:/policies/loki.json
      - ./mimir/policy.json:/policies/mimir.json
    entrypoint: >
      /bin/sh -c " /usr/bin/mc config host add minio http://minio:9000 admin $MINIO_ROOT_PASSWORD; /usr/bin/mc admin user add minio loki $LOKI_PASSWORD; /usr/bin/mc mb minio/loki; /usr/bin/mc admin policy create minio loki /policies/loki.json; /usr/bin/mc admin policy attach minio loki --user loki; exit 0; "

  loki-init:
    image: &lokiImage grafana/loki
    user: root
    entrypoint: chown 10001:10001 /loki
    volumes:
      - ./store/loki:/loki
    networks:
      - loki
  loki-gateway:
    image: nginx
    volumes:
      - ./loki/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - TZ=Indian/Reunion
    ports:
      - 8080:80
      - "3100"
    networks:
      - loki
  loki-read:
    image: *lokiImage
    volumes:
      - ./loki/config.yaml:/etc/loki/loki.yaml:ro
      - ./loki/rules:/loki/rules:ro
    ports:
      - "3100"
      - "7946"
    command: "-config.file=/etc/loki/loki.yaml -target=read -config.expand-env=true"
    networks:
      - loki
    environment:
      - LOKI_PASSWORD=${LOKI_PASSWORD}
      - TZ=Indian/Reunion
    restart: always
    deploy:
      mode: replicated
      replicas: 3
  loki-write:
    image: *lokiImage
    volumes:
      - ./loki/config.yaml:/etc/loki/loki.yaml:ro
    ports:
      - "3100"
      - "7946"
    command: "-config.file=/etc/loki/loki.yaml -target=write -config.expand-env=true"
    networks:
      - loki
    environment:
      - LOKI_PASSWORD=${LOKI_PASSWORD}
      - TZ=Indian/Reunion
    restart: always
    deploy:
      mode: replicated
      replicas: 3
  loki-backend:
    image: *lokiImage
    volumes:
      - ./loki/config.yaml:/etc/loki/loki.yaml:ro
    ports:
      - "3100"
      - "7946"
    command: "-config.file=/etc/loki/loki.yaml -target=backend -legacy-read-mode=false -config.expand-env=true"
    networks:
      - loki
    environment:
      - LOKI_PASSWORD=${LOKI_PASSWORD}
      - TZ=Indian/Reunion
    restart: always
    deploy:
      mode: replicated
      replicas: 3
  minio_mimir_createjob:
    image: minio/mc
    depends_on:
      - minio
    networks:
      - loki
    env_file:
      - .env
    volumes:
      - ./loki/policy.json:/policies/loki.json
      - ./mimir/policy.json:/policies/mimir.json
    entrypoint: >
      /bin/sh -c " /usr/bin/mc config host add minio http://minio:9000 admin $MINIO_ROOT_PASSWORD; /usr/bin/mc admin user add minio mimir $MIMIR_PASSWORD; /usr/bin/mc mb minio/mimir-blocks; /usr/bin/mc mb minio/mimir-alertmanager; /usr/bin/mc mb minio/mimir-ruler; /usr/bin/mc admin policy create minio mimir /policies/mimir.json; /usr/bin/mc admin policy attach minio mimir --user mimir;

      exit 0; "

  mimir-lb:
    image: nginx
    volumes:
      - ./mimir/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - "mimir-0"
      - "mimir-1"
      - "mimir-2"
    ports:
      - 9009:9009
    environment:
      - TZ=Indian/Reunion
    networks:
      - loki
  mimir-0:
    image: grafana/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -config.expand-env=true
    environment:
      - MIMIR_PASSWORD=${MIMIR_PASSWORD}
      - TZ=Indian/Reunion
    hostname: mimir-0
    depends_on:
      - minio
    volumes:
      - ./mimir/config.yaml:/etc/mimir.yaml
      - ./mimir/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - ./store/mimir/0:/data
    networks:
      - loki
  mimir-1:
    image: grafana/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -config.expand-env=true
    environment:
      - MIMIR_PASSWORD=${MIMIR_PASSWORD}
      - TZ=Indian/Reunion
    hostname: mimir-1
    depends_on:
      - minio
    volumes:
      - ./mimir/config.yaml:/etc/mimir.yaml
      - ./mimir/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - ./store/mimir/1:/data
    networks:
      - loki
  mimir-2:
    image: grafana/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -config.expand-env=true
    environment:
      - MIMIR_PASSWORD=${MIMIR_PASSWORD}
      - TZ=Indian/Reunion
    hostname: mimir-2
    depends_on:
      - minio
    volumes:
      - ./mimir/config.yaml:/etc/mimir.yaml
      - ./mimir/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - ./store/mimir/2:/data
    networks:
      - loki
  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=admin
      - TZ=Indian/Reunion
    env_file:
      - .env
    command:
      - server
      - /data
      - --console-address
      - :9001
    volumes:
      - ./store/minio:/data
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      - loki
  mktxp:
    image: ghcr.io/akpw/mktxp:latest
    user: root
    volumes:
      - './mktxp:/root/mktxp'
    networks:
      - loki
    restart: unless-stopped
  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - ./prometheus/config.yaml:/etc/prometheus/prometheus.yml
    depends_on:
      - "mimir-0"
      - "mimir-1"
      - "mimir-2"
    networks:
      - loki
    ports:
      - 9090:9090
